-- Load Rayfield Library
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Shared = ReplicatedStorage:WaitForChild("Shared", 10)
local Framework = Shared and Shared:WaitForChild("Framework", 10)
local Network = Framework and Framework:WaitForChild("Network", 10)
local Remote = Network and Network:WaitForChild("Remote", 10)

-- Validate remote objects
local RemoteEvent = Remote and Remote:WaitForChild("Event", 10)
local RemoteFunction = Remote and Remote:WaitForChild("Function", 10)

-- Exit if critical services are missing
if not (Shared and Framework and Network and Remote and RemoteEvent and RemoteFunction) then
    warn("Failed to initialize: Critical services or remotes not found.")
    return
end

-- Flags to control loops
local BlowBubbleEnabled = false
local UnlockRiftChestEnabled = false
local MainLoopEnabled = false
local AutoHatchEggEnabled = false

-- Task references for loop cancellation
local BlowBubbleTask = nil
local UnlockRiftChestTask = nil
local MainLoopTask = nil
local AutoHatchEggTask = nil 

-- BlowBubble Loop
local function StartBlowBubbleLoop()
    if BlowBubbleTask then return end
    BlowBubbleTask = task.spawn(function()
        while BlowBubbleEnabled do
            pcall(function()
                RemoteEvent:FireServer("BlowBubble")
            end)
            task.wait(0.6)
        end
        BlowBubbleTask = nil
    end)
end

-- UnlockRiftChest Loop
local function StartUnlockRiftChestLoop()
    if UnlockRiftChestTask then return end
    UnlockRiftChestTask = task.spawn(function()
        while UnlockRiftChestEnabled do
            pcall(function()
                RemoteEvent:FireServer("UnlockRiftChest", "royal-chest", "golden-chest", false)
            end)
            task.wait(1)
        end
        UnlockRiftChestTask = nil
    end)
end

-- Main Loop (ClaimFreeWheelSpin, ClaimPlaytime, ClaimChest)
local function StartMainLoop()
    if MainLoopTask then return end
    MainLoopTask = task.spawn(function()
        while MainLoopEnabled do
            pcall(function()
                RemoteEvent:FireServer("ClaimFreeWheelSpin")
            end)
            
            for i = 1, 9 do
                if not MainLoopEnabled then break end
                pcall(function()
                    RemoteFunction:InvokeServer("ClaimPlaytime", i)
                end)
                task.wait(3.5)
            end
            
            pcall(function()
                RemoteEvent:FireServer("ClaimChest", "Void Chest", "Giant Chest", true)
            end)
            task.wait(1.5)
        end
        
        MainLoopTask = nil
    end)
end

-- Auto Hatch Egg Loop
local function StartAutoHatchEggLoop()
    if AutoHatchEggTask then return end
    AutoHatchEggTask = task.spawn(function()
        local args = {
            "HatchEgg",           
            "Common Egg",
            "Spotted Egg",
            "Iceshard Egg",
            "Spikey Egg",
            "Magma Egg",
            "Crystal Egg",
            "Lunar Egg",
            "Void Egg",
            "Hell Egg",
            "Nightmare Egg",
            "Rainbow Egg",
            "Infinity Egg",
            "100M Egg",
            6
        }
        while AutoHatchEggEnabled do
            pcall(function()
                RemoteEvent:FireServer(unpack(args))
            end)
            task.wait(0.1) -- Adjustable delay to reduce server load
        end
        AutoHatchEggTask = nil
    end)
end

-- Stop Functions
local function StopBlowBubbleLoop()
    BlowBubbleEnabled = false
    if BlowBubbleTask then
        task.cancel(BlowBubbleTask)
        BlowBubbleTask = nil
    end
end

local function StopUnlockRiftChestLoop()
    UnlockRiftChestEnabled = false
    if UnlockRiftChestTask then
        task.cancel(UnlockRiftChestTask)
        UnlockRiftChestTask = nil
    end
end

local function StopMainLoop()
    MainLoopEnabled = false
    if MainLoopTask then
        task.cancel(MainLoopTask)
        MainLoopTask = nil
    end
end

local function StopAutoHatchEggLoop()
    AutoHatchEggEnabled = false
    if AutoHatchEggTask then
        task.cancel(AutoHatchEggTask)
        AutoHatchEggTask = nil
    end
end

-- Create Rayfield UI
local Window = Rayfield:CreateWindow({
    Name = "BGSI FARM",
    LoadingTitle = "Loading BGSI Scripts",
    LoadingSubtitle = "by NiTroHub",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "NiTroHub",
        FileName = "Script-BGSI-Settings"
    }
})

-- Controls Tab
local ControlsTab = Window:CreateTab("Controls")

-- Toggle for BlowBubble
ControlsTab:CreateToggle({
    Name = "Blow Bubble",
    CurrentValue = false,
    Flag = "BlowBubbleToggle",
    Callback = function(Value)
        BlowBubbleEnabled = Value
        if Value then
            StartBlowBubbleLoop()
        else
            StopBlowBubbleLoop()
        end
    end
})

-- Toggle for UnlockRiftChest
ControlsTab:CreateToggle({
    Name = "Unlock Golden Chest",
    CurrentValue = false,
    Flag = "UnlockRiftChestToggle",
    Callback = function(Value)
        UnlockRiftChestEnabled = Value
        if Value then
            StartUnlockRiftChestLoop()
        else
            StopUnlockRiftChestLoop()
        end
    end
})

-- Toggle for Main Loop
ControlsTab:CreateToggle({
    Name = "Main Loop (Spin, Playtime, Chests)",
    CurrentValue = false,
    Flag = "MainLoopToggle",
    Callback = function(Value)
        MainLoopEnabled = Value
        if Value then
            StartMainLoop()
        else
            StopMainLoop()
        end
    end
})

-- Toggle for Auto Hatch Egg
ControlsTab:CreateToggle({
    Name = "Fast Hatch Egg",
    CurrentValue = false,
    Flag = "AutoHatchEggToggle",
    Callback = function(Value)
        AutoHatchEggEnabled = Value
        if Value then
            StartAutoHatchEggLoop()
        else
            StopAutoHatchEggLoop()
        end
    end
})

-- Settings Tab
local SettingsTab = Window:CreateTab("Settings")

-- Destroy UI Button
SettingsTab:CreateButton({
    Name = "Destroy UI",
    Callback = function()
        StopBlowBubbleLoop()
        StopUnlockRiftChestLoop()
        StopMainLoop()
        StopAutoHatchEggLoop()
        Rayfield:Destroy()
    end
})
